{"ast":null,"code":"import*as yup from'yup';export var registerSchema=yup.object().shape({RestaurantName:yup.string().required(),RestaurantAddress:yup.string().required(),OwnerNumber:yup.number().required(),CuisineType:yup.string().required(),EmailAddress:yup.string().email('Invalid Email address').required('Email Address is required'),Password:yup.string().required('Password is required').min(5,'Password should be at least 5 character').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,'Password must contain uppercase, lowercase, number, and special character'),ConfirmPassword:yup.string().oneOf([yup.ref('Password')],'Password must match').required('Passwordis required')});export var addMenuSchema=yup.object().shape({itemName:yup.string().required(),category:yup.string().required(),price:yup.number().required(),menu:yup.mixed().test('fileRequired','Please upload a file',function(value){if(value&&value.length>0){return true;}return false;})});export var userSignUpSchema=yup.object().shape({EmailAddress:yup.string().email('Invalid Email address').required('Email Address is required'),FullName:yup.string().required('Full Name is required'),Password:yup.string().required('Password is required').min(5,'Password should be at least 5 character').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,'Password must contain uppercase, lowercase, number, and special character'),ConfirmPassword:yup.string().oneOf([yup.ref('Password')],'Passwords must match').required('Password is required')});export var userLoginSchema=yup.object().shape({Email:yup.string().email('Invalid Email address').required('Email Address is required'),Password:yup.string().required('Password is required').min(5,'Password should be at least 5 character')});export var userAddressSchema=yup.object().shape({Name:yup.string().required('name is required'),StreetAddress:yup.string().required('address is required'),City:yup.string().required('city name is required'),State:yup.string().required('state is required'),Pincode:yup.string().required('pincode is required'),PhoneNumber:yup.string().required('phone number is required').min(10,'invalid phone number').max(10,'invalid phone number'),DeliveryType:yup.string().required('address type is required')});export var PaymentScheme=yup.object().shape({test:yup.string().required('select a payment method')});","map":{"version":3,"names":["yup","registerSchema","object","shape","RestaurantName","string","required","RestaurantAddress","OwnerNumber","number","CuisineType","EmailAddress","email","Password","min","matches","ConfirmPassword","oneOf","ref","addMenuSchema","itemName","category","price","menu","mixed","test","value","length","userSignUpSchema","FullName","userLoginSchema","Email","userAddressSchema","Name","StreetAddress","City","State","Pincode","PhoneNumber","max","DeliveryType","PaymentScheme"],"sources":["C:/Users/USER/Desktop/HungryHub1/client/src/validation/formValidation.js"],"sourcesContent":["import * as yup from 'yup'\r\n\r\nexport const registerSchema = yup.object().shape({\r\n  RestaurantName: yup.string().required(),\r\n  RestaurantAddress: yup.string().required(),\r\n  OwnerNumber: yup.number().required(),\r\n  CuisineType: yup.string().required(),\r\n  EmailAddress: yup.string().email('Invalid Email address').required('Email Address is required'),\r\n  Password: yup.string().required('Password is required').min(5, 'Password should be at least 5 character').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, 'Password must contain uppercase, lowercase, number, and special character'),\r\n  ConfirmPassword: yup.string().oneOf([yup.ref('Password')],'Password must match').required('Passwordis required')\r\n})\r\n\r\n\r\nexport const addMenuSchema = yup.object().shape({\r\n  itemName: yup.string().required(),\r\n  category: yup.string().required(),\r\n  price: yup.number().required(),\r\n  menu: yup.mixed().test('fileRequired', 'Please upload a file', function (value) {\r\n    if (value && value.length > 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }),\r\n})\r\n\r\nexport const userSignUpSchema = yup.object().shape({\r\n  EmailAddress: yup.string().email('Invalid Email address').required('Email Address is required'),\r\n  FullName: yup.string().required('Full Name is required'),\r\n  Password: yup.string().required('Password is required').min(5, 'Password should be at least 5 character').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/, 'Password must contain uppercase, lowercase, number, and special character'),\r\n  ConfirmPassword: yup.string().oneOf([yup.ref('Password')], 'Passwords must match').required('Password is required')\r\n})\r\n\r\nexport const userLoginSchema = yup.object().shape({\r\n  Email: yup.string().email('Invalid Email address').required('Email Address is required'),\r\n  Password: yup.string().required('Password is required').min(5, 'Password should be at least 5 character')\r\n})\r\n\r\nexport const userAddressSchema = yup.object().shape({\r\n  Name: yup.string().required('name is required'),\r\n  StreetAddress: yup.string().required('address is required'),\r\n  City: yup.string().required('city name is required'),\r\n  State: yup.string().required('state is required'),\r\n  Pincode: yup.string().required('pincode is required'),\r\n  PhoneNumber: yup.string().required('phone number is required').min(10,'invalid phone number').max(10,'invalid phone number'),\r\n  DeliveryType: yup.string().required('address type is required')\r\n})\r\n\r\nexport const PaymentScheme = yup.object().shape({\r\n  test:yup.string().required('select a payment method')\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}