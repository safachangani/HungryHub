{"ast":null,"code":"import { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nconst schema = yup.object().shape({\n  RestaurantName: yup.string().required(),\n  RestaurantAddress: yup.string().required(),\n  OwnerNumber: yup.number().required(),\n  CuisineType: yup.string().required(),\n  itemName: yup.string().required(),\n  category: yup.string().required(),\n  price: yup.number().required(),\n  menu: yup.mixed().test('fileType', 'Invalid file format', value => {\n    if (!value) return false; // No file selected\n    return ['image/jpeg', 'image/png'].includes(value.type); // Check if file is of specified types\n  }).test(\"fileSize\", \"File size is too large\", value => {\n    return value[0].size <= 1024 * 1024;\n  }).required()\n});\nexport default yupResolver(schema);","map":{"version":3,"names":["yupResolver","yup","schema","object","shape","RestaurantName","string","required","RestaurantAddress","OwnerNumber","number","CuisineType","itemName","category","price","menu","mixed","test","value","includes","type","size"],"sources":["C:/Users/USER/Desktop/swiggy/client/src/validation/formValidation.js"],"sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\n\r\nconst schema = yup.object().shape({\r\n    RestaurantName: yup.string().required(),\r\n    RestaurantAddress: yup.string().required(),\r\n    OwnerNumber: yup.number().required(),\r\n    CuisineType: yup.string().required(),\r\n    itemName: yup.string().required(),\r\n    category: yup.string().required(),\r\n    price:yup.number().required(),\r\n    menu:yup.mixed().test('fileType', 'Invalid file format', (value) => {\r\n        if (!value) return false; // No file selected\r\n        return ['image/jpeg', 'image/png'].includes(value.type); // Check if file is of specified types\r\n      }) .test(\"fileSize\", \"File size is too large\", (value) => {\r\n        return value[0].size <= 1024 * 1024;\r\n      }).required(),\r\n})\r\nexport default yupResolver(schema)"],"mappings":"AAAA,SAASA,WAAW,QAAQ,yBAAyB;AACrD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAE1B,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EAC9BC,cAAc,EAAEJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EACvCC,iBAAiB,EAAEP,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EAC1CE,WAAW,EAAER,GAAG,CAACS,MAAM,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC;EACpCI,WAAW,EAAEV,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EACpCK,QAAQ,EAAEX,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EACjCM,QAAQ,EAAEZ,GAAG,CAACK,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EACjCO,KAAK,EAACb,GAAG,CAACS,MAAM,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC;EAC7BQ,IAAI,EAACd,GAAG,CAACe,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,UAAU,EAAE,qBAAqB,EAAGC,KAAK,IAAK;IAChE,IAAI,CAACA,KAAK,EAAE,OAAO,KAAK,CAAC,CAAC;IAC1B,OAAO,CAAC,YAAY,EAAE,WAAW,CAAC,CAACC,QAAQ,CAACD,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC;EAC3D,CAAC,CAAC,CAAEH,IAAI,CAAC,UAAU,EAAE,wBAAwB,EAAGC,KAAK,IAAK;IACxD,OAAOA,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI,IAAI,IAAI,GAAG,IAAI;EACrC,CAAC,CAAC,CAACd,QAAQ,CAAC;AAClB,CAAC,CAAC;AACF,eAAeP,WAAW,CAACE,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}