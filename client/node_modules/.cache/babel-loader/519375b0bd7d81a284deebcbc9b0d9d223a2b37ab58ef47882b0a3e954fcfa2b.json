{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\swiggy\\\\client\\\\src\\\\components\\\\context\\\\useContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserLoginContext = /*#__PURE__*/createContext();\nexport function UserProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    let decodedToken;\n    async function decodeToken() {\n      if (token) {\n        decodedToken = await jwt_decode(token);\n        setUser(decodedToken);\n      }\n    }\n    decodeToken();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserLoginContext.Provider, {\n    value: {\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = UserProvider;\nexport default UserLoginContext;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jwt_decode","jsxDEV","_jsxDEV","UserLoginContext","UserProvider","_ref","_s","children","user","setUser","token","localStorage","getItem","decodedToken","decodeToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/swiggy/client/src/components/context/useContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from 'react';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const UserLoginContext = createContext();\r\n\r\nexport function UserProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    let decodedToken;\r\n    \r\n    async function decodeToken() {\r\n      if (token) {\r\n        decodedToken = await jwt_decode(token);\r\n        setUser(decodedToken);\r\n      }\r\n    }\r\n    \r\n    decodeToken();\r\n  }, []);\r\n\r\n  return (\r\n    <UserLoginContext.Provider value={{ user }}>\r\n      {children}\r\n    </UserLoginContext.Provider>\r\n  );\r\n}\r\n\r\nexport default UserLoginContext;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,MAAMC,gBAAgB,gBAAGN,aAAa,CAAC,CAAC;AAE/C,OAAO,SAASO,YAAYA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIC,YAAY;IAEhB,eAAeC,WAAWA,CAAA,EAAG;MAC3B,IAAIJ,KAAK,EAAE;QACTG,YAAY,GAAG,MAAMb,UAAU,CAACU,KAAK,CAAC;QACtCD,OAAO,CAACI,YAAY,CAAC;MACvB;IACF;IAEAC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACC,gBAAgB,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAER;IAAK,CAAE;IAAAD,QAAA,EACxCA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC;AAACd,EAAA,CAtBeF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAwB5B,eAAeD,gBAAgB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}